00 START
01 LOADNUM -1
02 STORE 4
03 LOADNUM 3
04 STORE 5
05 LOADNUM -4
06 STORE 6
07 LOADNUM 1
08 STORE 7
09 LOADNUM 10
10 STORE 8
11 LOADNUM 0
12 STORE 9
13 LOADNUM 0
14 STORE 1
15 LOADNUM -10
16 STORE 0
17 LOAD 4
18 STORE 10
19 LOAD 5
20 STORE 11
21 LOAD 11
22 JUMPNULL 30 
23 LOAD 0           # Beginn with the first equation
24 MUL 10           # In R10 we store the actual digit (R10^R11)
25 JUMPNULL 46
26 STORE 2
27 STORE 10
28 LOAD 11 <<<<<<<<<<<<<<<<<<<<<<<<<<
29 JUMP 32
30 LOAD 10          
31 JUMP 46
32 STORE 3
33 LOAD 3           # Here we beginn the power pow(R2^R3)
34 JUMPPOS 37       # If positive, continue
35 LOADNUM 1        # If negative or 0, return 1
36 JUMP 46
37 SUBNUM 1
38 JUMPPOS 41
39 LOAD 2
40 JUMP 46
41 STORE 3
42 LOAD 2
43 MUL 10
44 STORE 2
45 JUMP 33          # Here we finished the power
46 ADD 1            # Add the result to the equation
47 STORE 1          # The result of the equation is stored in R1
48 LOAD 12          # If R12 is NUL, we need to do the second part
49 JUMPNEG 58       # If R12 is NEG, we now need to make the third part
50 JUMPPOS 65       # If R12 is POS, we finished with all 3 parts
51 LOAD 6
52 STORE 10
53 LOAD 7
54 STORE 11
55 LOADNUM -1
56 STORE 12
57 JUMP 21
58 LOAD 8
59 STORE 10
60 LOAD 9
61 STORE 11
62 LOADNUM 1 
63 STORE 12
64 JUMP 21
65 LOAD 14 @        # Here we finished the equation
66 JUMPPOS 75       # R14 saves 1 if the first saved was positive
67 JUMPNEG 79       # R14 saves -1 if negative, and 0 if wasn't set already
68 LOAD 1
69 JUMPPOS 72
70 LOADNUM -1
71 JUMP 73
72 LOADNUM 1
73 STORE 14
74 JUMP 83
75 LOAD 1           # If it was positive
76 JUMPPOS 83       # Positive and positive do nothing
77 JUMP 98          # Positive and negative... There is a change!
78 JUMP 83
79 LOAD 1 <<<<<
80 JUMPNEG 81
81 JUMP 98
82 JUMP 83
83 LOAD 1           # Here we reset some variables, so we can keep searching
84 STORE 15
85 JUMPNEG 88
86 LOADNUM 1
87 JUMP 89
88 LOADNUM -1
89 STORE 14
90 LOADNUM 0
91 STORE 1
92 LOADNUM 0
93 STORE 12
94 LOAD 0           # Here we change the "counter"  ( X )
95 ADDNUM 1
96 STORE 0 
97 JUMP 17          # And let's go again
98 LOAD 1 
99 JUMPNEG 110
100 LOADNUM 0
101 SUB 15
102 SUB 1
103 JUMPPOS 107
104 LOAD 15
105 STORE 1
106 STOP
107 LOAD 1
108 STORE 1
109 STOP
110 LOADNUM 0
111 SUB 1
112 SUB 15
113 JUMPPOS 117
114 LOAD 1
115 STORE 1
116 STOP
117 LOAD 15
118 STORE 1
119 STOP